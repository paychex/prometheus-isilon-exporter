apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-isilon-exporter.fullname" . }}
  labels:
    {{- include "prometheus-isilon-exporter.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "prometheus-isilon-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus-isilon-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-isilon-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:          
          # {{- range $key, $val := .Values.env }}
          #   - name: {{ $key }}
          #     value: {{ $val | quote }}
          # {{- end }}
          {{- include "helpers.list-env-variables" . | indent 10 }}
          # {{- range $key, $val := .Values.env.normal }}
          #   - name: {{ $key }}
          #     valueFrom:
          #       secretKeyRef:
          #         name: app-env-configmap
          #         key: {{ $key }}
          # {{- end}}
          # {{- range $key, $val := .Values.env.secret }}
          #   - name: {{ $key }}
          #     valueFrom:
          #       secretKeyRef:
          #         name: app-env-secret
          #         key: {{ $key }}
          # {{- end}}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
